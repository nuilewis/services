version: 2.1

orbs:
  android: circleci/android@2.3.0
jobs:
  test:
    description: Runs Unit Tests and Instrumented Tests on the Services app
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2021.10.1
  #  parallelism: 4

    steps:
      - checkout
      - run:
          name: Install OpenJDK 8
          command: |
            sudo apt-get update && sudo apt-get install -y openjdk-8-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac
            echo 'export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"' >> $BASH_ENV
            java -version
      - run:
          name: Chmod Permissions
          command: sudo chmod +x gradlew
      - run:
          name: show gradle tasks
          command: ./gradlew tasks
      - android/create-avd:
          avd-name: customavd
          install: true
          system-image: system-images;android-29;default;x86_64
          additional-args: --sdcard 2048M

      - android/start-emulator:
          avd-name: customavd
          no-window: true
          restore-gradle-cache-prefix: v1
          post-emulator-launch-assemble-command: ""

      - run:
          name: install the services app on the emulator
          command: |
            ./gradlew clean installDemoBasicDebug

      - run:
          name: show installed packages
          command: adb shell pm list packages

      - android/run-tests:
          test-command: ./gradlew test
          max-tries: 1

      - android/run-tests:
          test-command: ./gradlew grantPermissionForODkApp connectedDemoBasicDebugAndroidTest
          max-tries: 1
          
      - android/save-gradle-cache:
          cache-prefix: v1
      - store_artifacts:
          name: Store Test Results
          path: services_app/build/outputs/androidTest-results
      - store_artifacts:
          name: Store Test Reports
          path: services_app/build/reports

  build:
    docker:
      - image: cimg/android:2023.06
    steps:
      - checkout
      - run:
          name: Install OpenJDK 8
          command: |
            sudo apt-get update && sudo apt-get install -y openjdk-8-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac
            echo 'export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"' >> $BASH_ENV
            java -version

      - run:
          name: Chmod Permissions
          command: sudo chmod +x gradlew
      - android/restore-gradle-cache:
          cache-prefix: v1

      - run:
          name: Echo Java home
          command: |
            echo $JAVA_HOME  

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - android/save-gradle-cache:
          cache-prefix: v1
      - run:
          name: Build Services
          command: ./gradlew assemble
      - persist_to_workspace:
          root: ~/project
          paths:
            - "services_app/build/outputs/apk"
      - store_artifacts:
          name: Store Build Artifacts
          path: services_app/build/outputs/apk


  deploy:
    docker:
      - image: cimg/go:1.21.6
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Deploy Build to Github
          command: |
            echo 'root' directory
            ls ~/
            echo 'project' directory
            ls ~/project
            echo 'services_app/build/output/apk' directooy
            ls ~/project/services_app/build/output/apk
            
            go install github.com/tcnksm/ghr@latest
            VERSION=v1
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} .~/project/services_app/build/outputs/apk/snapshotBasic/release/services_app-snapshot-basic-release-unsigned.apk




workflows:
  build-test-workflow:
    jobs:
      - build
      # - test
      - deploy:
          requires:
            - build
