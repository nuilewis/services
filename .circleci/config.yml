version: 2.1

orbs:
  android: circleci/android@2.3.0
jobs:
  test:
    description: Runs unit tests and instrumented tests on the Services app
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2021.10.1

    steps:
      - checkout
      - run:
          name: Install OpenJDK 8
          command: |
            sudo apt-get update && sudo apt-get install -y openjdk-8-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac
            echo 'export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"' >> $BASH_ENV
            java -version
      - run:
          name: Chmod Permissions
          command: sudo chmod +x gradlew
      - run:
          name: Update Package list
          command: sudo apt-get update

      - android/create-avd:
          avd-name: customavd
          install: true
          system-image: system-images;android-29;default;x86
          additional-args: --sdcard 2048M
      - android/start-emulator:
          avd-name: customavd
          no-window: true
          restore-gradle-cache-prefix: v1
          post-emulator-launch-assemble-command: ./gradlew assemble
      
      - run: 
          name: Grant external storage permissions
          command: |
              adb shell pm grant org.opendatakit.services android.permission.READ_EXTERNAL_STORAGE
              adb shell pm grant org.opendatakit.services android.permission.WRITE_EXTERNAL_STORAGE

      - android/run-tests:
          test-command: ./gradlew test
      - android/run-tests:
          test-command: ./gradlew connectedAndroidTest
      - android/save-gradle-cache:
          cache-prefix: v1

  build:
    docker:
      - image: cimg/android:2023.06
    steps:
      - checkout
      - run:
          name: Install OpenJDK 8
          command: |
            sudo apt-get update && sudo apt-get install -y openjdk-8-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac
            echo 'export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"' >> $BASH_ENV
            java -version

      - run:
          name: Chmod Permissions
          command: sudo chmod +x gradlew
      - android/restore-gradle-cache:
          cache-prefix: v1

      - run:
          name: Echo Java home
          command: |
            echo $JAVA_HOME  

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - android/save-gradle-cache:
          cache-prefix: v1
      - run:
          name: Build Library
          command: ./gradlew assemble

  deploy:
    executor:
      name: android/android-docker
      tag: 2023.06.1
    steps:
      - checkout
      - run:
          name: Install OpenJDK 8
          command: |
            sudo apt-get update && sudo apt-get install -y openjdk-8-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac
            echo 'export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"' >> $BASH_ENV
            java -version
      - run:
          name: Chmod Permissions
          command: sudo chmod +x gradlew
      - android/restore-gradle-cache:
          cache-prefix: v1
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - android/save-gradle-cache:
          cache-prefix: v1
      #      - run:
      #          name: Publish library
      #          command: ./gradlew publish
      - run:
          name: Publish Services Build
          command: echo "Todo, figure out how we would go about publishing the build artifacts"


workflows:
  build-test-deploy-workflow:
    jobs:
      # - build
      - test
      # - test:
      #     requires:
      #       - build
      # - deploy:
      #     requires:
      #       - build
      #       - test



